# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes 
# by default, and isort-like import sorting. Unlike Flake8, Ruff 
# doesn't enable pycodestyle warnings (`W`) or McCabe complexity 
# (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I"]
select = [
    "E",
    "F",
    "W",
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "G",    # flake8-logging-format
    "TCH",  # flake8-type-checking
    "YTT",  # flake8-2020
    "UP",   # pyupgrade
    "I",    # isort
    "NPY",  # numpy specific rules
    "RUF031"# incorrectly-parenthesized-tuple-in-subscript
]
ignore = [
    "E741",  # Do not use variables named 'I', 'O', or 'l'
    "UP038", # non-pep604-isinstance
]

ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.isort]
# Group imports like isort
known-first-party = ["cluster_sf"]
known-third-party = ["numpy", "astropy", "scipy", "matplotlib"]
lines-between-types = 1
combine-as-imports = true
force-sort-within-sections = true
force-single-line = false
multi-line-output = 3
include-trailing-comma = true


[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"